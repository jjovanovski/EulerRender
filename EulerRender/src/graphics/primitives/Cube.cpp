#include "Cube.h"

using namespace Euler;

Cube::Cube() {
	float verts[] = {
		// Front face
		-1.0, -1.0,  1.0,		0.0, 0.0, 1.0,
		1.0, -1.0,  1.0,		0.0, 0.0, 1.0,
		1.0,  1.0,  1.0,		0.0, 0.0, 1.0,
		-1.0,  1.0,  1.0,		0.0, 0.0, 1.0,

		// Back face
		-1.0, -1.0, -1.0,		0.0, 0.0, -1.0,
		-1.0,  1.0, -1.0,		0.0, 0.0, -1.0,
		1.0,  1.0, -1.0,		0.0, 0.0, -1.0,
		1.0, -1.0, -1.0,		0.0, 0.0, -1.0,

		// Top face
		-1.0,  1.0, -1.0,		0.0, 1.0, 0.0,
		-1.0,  1.0,  1.0,		0.0, 1.0, 0.0,
		1.0,  1.0,  1.0,		0.0, 1.0, 0.0,
		1.0,  1.0, -1.0,		0.0, 1.0, 0.0,

		// Bottom face
		-1.0, -1.0, -1.0,		0.0, -1.0, 0.0,
		1.0, -1.0, -1.0,		0.0, -1.0, 0.0,
		1.0, -1.0,  1.0,		0.0, -1.0, 0.0,
		-1.0, -1.0,  1.0,		0.0, -1.0, 0.0,

		// Right face
		1.0, -1.0, -1.0,		1.0, 0.0, 0.0,
		1.0,  1.0, -1.0,		1.0, 0.0, 0.0,
		1.0,  1.0,  1.0,		1.0, 0.0, 0.0,
		1.0, -1.0,  1.0,		1.0, 0.0, 0.0,

		// Left face
		-1.0, -1.0, -1.0,		-1.0, 0.0, 0.0,
		-1.0, -1.0,  1.0,		-1.0, 0.0, 0.0,
		-1.0,  1.0,  1.0,		-1.0, 0.0, 0.0,
		-1.0,  1.0, -1.0,		-1.0, 0.0, 0.0,
	};

	for (int i = 0; i < 144; i += 6) {
		vertices.push_back(Vertex(verts[i], verts[i + 1], verts[i + 2], verts[i + 3], verts[i + 4], verts[i + 5]));
	}

	int ind[] = {
		0,  1,  2,      0,  2,  3,    // front
		4,  5,  6,      4,  6,  7,    // back
		8,  9,  10,     8,  10, 11,   // top
		12, 13, 14,     12, 14, 15,   // bottom
		16, 17, 18,     16, 18, 19,   // right
		20, 21, 22,     20, 22, 23,   // left
	};
	for (int i = 0; i < 36; i++) {
		indices.push_back(ind[i]);
	}

	Upload();
}


Cube::~Cube() {
}
